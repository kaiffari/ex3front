{"ast":null,"code":"var _jsxFileName = \"/home/utu/git/utuweb/ex_2_10/src/addReminders.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleReminderChange(event) {\n  console.log(event.target.value);\n  this.setState({\n    newReminder: event.target.value\n  });\n}\n\nfunction AddReminders(reminders, newReminder) {\n  addReminder = event => {\n    /*alert('A note was submitted: ' + this.state.newNote);*/\n    event.preventDefault();\n    const reminderObject = {\n      name: this.state.newReminder,\n\n      /*      date: new Date().toISOString(),*/\n      id: this.state.reminders.length + 1\n    };\n    console.log(reminderObject);\n    const reminders = this.state.reminders.concat(reminderObject);\n    console.log(reminders);\n    this.setState({\n      reminders: reminders,\n      newReminder: ''\n    });\n    this.props.register(this.state.reminders);\n    console.log('nappia painettu');\n    console.log(event.target);\n  };\n\n  handleReminderChange = event => {\n    console.log(event.target.value);\n    this.setState({\n      newReminder: event.target.value\n    });\n  };\n  /* voisiko tästä tehdä vain funktion? */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.addReminder,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Topic:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.newReminder,\n          onChange: this.handleReminderChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ShowReminders, {\n      reminders: this.state.reminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_c = AddReminders;\nexport default AddReminders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminders\");","map":{"version":3,"sources":["/home/utu/git/utuweb/ex_2_10/src/addReminders.js"],"names":["React","handleReminderChange","event","console","log","target","value","setState","newReminder","AddReminders","reminders","addReminder","preventDefault","reminderObject","name","state","id","length","concat","props","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,oBAAT,CAA+BC,KAA/B,EAAsC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,OAAKC,QAAL,CAAc;AAAEC,IAAAA,WAAW,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAA5B,GAAd;AACD;;AAED,SAASG,YAAT,CAAuBC,SAAvB,EAAkCF,WAAlC,EAA+C;AAE7CG,EAAAA,WAAW,GAAIT,KAAD,IAAW;AACvB;AACAA,IAAAA,KAAK,CAACU,cAAN;AACA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWP,WADI;;AAE3B;AACMQ,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWL,SAAX,CAAqBO,MAArB,GAA8B;AAHb,KAAvB;AAKAd,IAAAA,OAAO,CAACC,GAAR,CAAYS,cAAZ;AACA,UAAMH,SAAS,GAAG,KAAKK,KAAL,CAAWL,SAAX,CAAqBQ,MAArB,CAA4BL,cAA5B,CAAlB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA,SAAKH,QAAL,CAAc;AACZG,MAAAA,SAAS,EAAEA,SADC;AAEZF,MAAAA,WAAW,EAAE;AAFD,KAAd;AAIA,SAAKW,KAAL,CAAWC,QAAX,CAAoB,KAAKL,KAAL,CAAWL,SAA/B;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACD,GAnBD;;AAqBAJ,EAAAA,oBAAoB,GAAIC,KAAD,IAAW;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,WAAW,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAA5B,KAAd;AACD,GAHD;AAKE;;;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAE,KAAKK,WAArB;AAAA,8BACI;AAAA,0CAEE;AACE,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWP,WADpB;AAEE,UAAA,QAAQ,EAAE,KAAKP;AAFjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKc,KAAL,CAAWL;AAArC;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH;;KA9CQD,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nfunction handleReminderChange (event) {\n  console.log(event.target.value)\n  this.setState({ newReminder: event.target.value })\n}\n\nfunction AddReminders (reminders, newReminder) {\n\n  addReminder = (event) => {\n    /*alert('A note was submitted: ' + this.state.newNote);*/\n    event.preventDefault()\n    const reminderObject = {\n      name: this.state.newReminder,\n/*      date: new Date().toISOString(),*/\n      id: this.state.reminders.length + 1\n    }\n    console.log(reminderObject)\n    const reminders = this.state.reminders.concat(reminderObject)\n    console.log(reminders)\n    this.setState({\n      reminders: reminders,\n      newReminder: ''\n    })\n    this.props.register(this.state.reminders)\n\n    console.log('nappia painettu')\n    console.log(event.target)\n  }\n\n  handleReminderChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newReminder: event.target.value })\n  }\n  \n    /* voisiko tästä tehdä vain funktion? */\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Topic: \n              <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Add</button>\n            </div>\n        </form>\n        <ShowReminders reminders={this.state.reminders} />\n      </div>\n    )\n}\n\nexport default AddReminders"]},"metadata":{},"sourceType":"module"}