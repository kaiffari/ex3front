{"ast":null,"code":"var _jsxFileName = \"/home/utu/git/utuweb/ex_2_10/src/addReminders.js\";\nimport React from 'react';\nimport ShowReminders from './reminders.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddReminders extends React.Component {\n  constructor(props) {\n    /* voiko constructorin jättää pois, kokeile */\n    super(props);\n\n    this.addReminder = event => {\n      event.preventDefault();\n      var pos = this.props.reminders.findIndex(o => o.name === event.target.value);\n\n      if (pos == -1) {\n        const reminderObject = {\n          name: this.state.newReminder,\n          id: this.props.reminders.length + 1\n        };\n        console.log('new object: ', reminderObject);\n        const reminders = this.props.reminders.concat(reminderObject);\n        console.log('concatenated: ', reminders);\n        this.props.setReminder(reminders);\n        /* clear input field */\n\n        this.state.newReminder = '';\n      } else {\n        alert('A duplicate reminder exists already!');\n      }\n    };\n\n    this.handleReminderChange = event => {\n      console.log('change...', event.target.value);\n      this.setState({\n        newReminder: event.target.value\n      });\n    };\n\n    this.state = {\n      /*        reminders: props.reminders,*/\n      newReminder: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addReminder,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Topic:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.newReminder,\n            onChange: this.handleReminderChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddReminders;\n/*      date: new Date().toISOString(),*/","map":{"version":3,"sources":["/home/utu/git/utuweb/ex_2_10/src/addReminders.js"],"names":["React","ShowReminders","AddReminders","Component","constructor","props","addReminder","event","preventDefault","pos","reminders","findIndex","o","name","target","value","reminderObject","state","newReminder","id","length","console","log","concat","setReminder","alert","handleReminderChange","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAG;AACpB,UAAMA,KAAN;;AADiB,SAQrBC,WARqB,GAQNC,KAAD,IAAW;AAEvBA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAIC,GAAG,GAAG,KAAKJ,KAAL,CAAWK,SAAX,CAAqBC,SAArB,CAA+BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWN,KAAK,CAACO,MAAN,CAAaC,KAA5D,CAAV;;AACA,UAAIN,GAAG,IAAI,CAAC,CAAZ,EAAe;AAEb,cAAMO,cAAc,GAAG;AACrBH,UAAAA,IAAI,EAAE,KAAKI,KAAL,CAAWC,WADI;AAErBC,UAAAA,EAAE,EAAE,KAAKd,KAAL,CAAWK,SAAX,CAAqBU,MAArB,GAA8B;AAFb,SAAvB;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BN,cAA3B;AAEA,cAAMN,SAAS,GAAG,KAAKL,KAAL,CAAWK,SAAX,CAAqBa,MAArB,CAA4BP,cAA5B,CAAlB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BZ,SAA9B;AAEA,aAAKL,KAAL,CAAWmB,WAAX,CAAuBd,SAAvB;AAEA;;AACA,aAAKO,KAAL,CAAWC,WAAX,GAAyB,EAAzB;AACD,OAfD,MAeO;AACLO,QAAAA,KAAK,CAAC,sCAAD,CAAL;AACD;AACF,KA/BoB;;AAAA,SAiCrBC,oBAjCqB,GAiCGnB,KAAD,IAAW;AAChCc,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,KAAK,CAACO,MAAN,CAAaC,KAAtC;AACA,WAAKY,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEX,KAAK,CAACO,MAAN,CAAaC;AAA5B,OAAd;AACD,KApCoB;;AAEjB,SAAKE,KAAL,GAAa;AACnB;AACQC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAgCHU,EAAAA,MAAM,GAAI;AAER,wBACE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,KAAKtB,WAArB;AAAA,gCACI;AAAA,4CAEE;AACE,YAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,WADpB;AAEE,YAAA,QAAQ,EAAE,KAAKQ;AAFjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAzDwC;;AA4D3C,eAAexB,YAAf;AAEA","sourcesContent":["import React from 'react';\nimport ShowReminders from './reminders.js';\n\nclass AddReminders extends React.Component {\n    constructor(props) {  /* voiko constructorin jättää pois, kokeile */\n      super(props);\n      this.state = {\n/*        reminders: props.reminders,*/\n        newReminder: ''\n      }\n    }\n\n  addReminder = (event) => {\n  \n    event.preventDefault()\n\n    var pos = this.props.reminders.findIndex(o => o.name === event.target.value)\n    if (pos == -1) {\n\n      const reminderObject = {\n        name: this.state.newReminder,\n        id: this.props.reminders.length + 1\n      }\n      console.log('new object: ',reminderObject)\n    \n      const reminders = this.props.reminders.concat(reminderObject)\n      console.log('concatenated: ', reminders)\n\n      this.props.setReminder(reminders)\n\n      /* clear input field */\n      this.state.newReminder = ''\n    } else {\n      alert('A duplicate reminder exists already!')\n    }\n  }\n\n  handleReminderChange = (event) => {\n    console.log('change...', event.target.value)\n    this.setState({ newReminder: event.target.value })\n  }\n  \n  render () {\n\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Topic: \n              <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Add</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddReminders\n\n/*      date: new Date().toISOString(),*/\n"]},"metadata":{},"sourceType":"module"}