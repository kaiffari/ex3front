{"ast":null,"code":"var _jsxFileName = \"/home/utu/git/utuweb/ex_2_10/src/addReminders.js\";\nimport React from 'react';\nimport ShowReminders from './reminders.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddReminders extends React.Component {\n  constructor(props) {\n    /* voiko constructorin jättää pois, kokeile */\n    super(props);\n\n    this.addReminder = event => {\n      event.preventDefault();\n      var pos = this.props.reminders.findIndex(o => o.name === this.state.newReminder);\n\n      if (pos == -1) {\n        const reminderObject = {\n          name: this.state.newReminder,\n          timestamp: this.state.newTime\n          /*id: this.props.reminders.length + 1*/\n\n        };\n        console.log('new object: ', reminderObject);\n        const reminders = this.props.reminders.concat(reminderObject);\n        console.log('concatenated: ', reminders);\n        this.props.setReminder(reminders);\n        /* clear input field */\n\n        this.state.newReminder = '';\n      } else {\n        alert('A duplicate reminder exists already!');\n      }\n    };\n\n    this.handleReminderChange = event => {\n      this.setState({\n        newReminder: event.target.value\n      });\n    };\n\n    this.handleTimeChange = event => {\n      this.setState({\n        newTime: event.target.value\n      });\n    };\n\n    this.state = {\n      newReminder: '',\n      newTime: new Date().toLocaleString()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addReminder,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Aihe: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.newReminder,\n            onChange: this.handleReminderChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), \"Aika: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.newTime,\n            onChange: this.handleTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddReminders;\n/*      date: ,*/","map":{"version":3,"sources":["/home/utu/git/utuweb/ex_2_10/src/addReminders.js"],"names":["React","ShowReminders","AddReminders","Component","constructor","props","addReminder","event","preventDefault","pos","reminders","findIndex","o","name","state","newReminder","reminderObject","timestamp","newTime","console","log","concat","setReminder","alert","handleReminderChange","setState","target","value","handleTimeChange","Date","toLocaleString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAG;AACpB,UAAMA,KAAN;;AADiB,SAQrBC,WARqB,GAQNC,KAAD,IAAW;AAEvBA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAIC,GAAG,GAAG,KAAKJ,KAAL,CAAWK,SAAX,CAAqBC,SAArB,CAA+BC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,KAAKC,KAAL,CAAWC,WAA1D,CAAV;;AACA,UAAIN,GAAG,IAAI,CAAC,CAAZ,EAAe;AAEb,cAAMO,cAAc,GAAG;AACrBH,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,WADI;AAErBE,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI;AACtB;;AAHqB,SAAvB;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BJ,cAA3B;AAEA,cAAMN,SAAS,GAAG,KAAKL,KAAL,CAAWK,SAAX,CAAqBW,MAArB,CAA4BL,cAA5B,CAAlB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,SAA9B;AAEA,aAAKL,KAAL,CAAWiB,WAAX,CAAuBZ,SAAvB;AAEA;;AACA,aAAKI,KAAL,CAAWC,WAAX,GAAyB,EAAzB;AACD,OAhBD,MAgBO;AACLQ,QAAAA,KAAK,CAAC,sCAAD,CAAL;AACD;AACF,KAhCoB;;AAAA,SAkCrBC,oBAlCqB,GAkCGjB,KAAD,IAAW;AAChC,WAAKkB,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAER,KAAK,CAACmB,MAAN,CAAaC;AAA5B,OAAd;AACD,KApCoB;;AAAA,SAsCrBC,gBAtCqB,GAsCDrB,KAAD,IAAW;AAC5B,WAAKkB,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEX,KAAK,CAACmB,MAAN,CAAaC;AAAxB,OAAd;AACD,KAxCoB;;AAEjB,SAAKb,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXG,MAAAA,OAAO,EAAE,IAAIW,IAAJ,GAAWC,cAAX;AAFE,KAAb;AAID;;AAoCHC,EAAAA,MAAM,GAAI;AAER,wBACE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,KAAKzB,WAArB;AAAA,gCACI;AAAA,4CACQ;AACJ,YAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,WADd;AAEJ,YAAA,QAAQ,EAAE,KAAKS;AAFX;AAAA;AAAA;AAAA;AAAA,kBADR,yBAKQ;AACJ,YAAA,KAAK,EAAE,KAAKV,KAAL,CAAWI,OADd;AAEJ,YAAA,QAAQ,EAAE,KAAKU;AAFX;AAAA;AAAA;AAAA;AAAA,kBALR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAhEwC;;AAmE3C,eAAe1B,YAAf;AAEA","sourcesContent":["import React from 'react';\nimport ShowReminders from './reminders.js';\n\nclass AddReminders extends React.Component {\n    constructor(props) {  /* voiko constructorin jättää pois, kokeile */\n      super(props);\n      this.state = {\n        newReminder: '',\n        newTime: new Date().toLocaleString()\n      }\n    }\n\n  addReminder = (event) => {\n  \n    event.preventDefault()\n\n    var pos = this.props.reminders.findIndex(o => o.name === this.state.newReminder)\n    if (pos == -1) {\n\n      const reminderObject = {\n        name: this.state.newReminder,\n        timestamp: this.state.newTime\n        /*id: this.props.reminders.length + 1*/\n      }\n      console.log('new object: ',reminderObject)\n    \n      const reminders = this.props.reminders.concat(reminderObject)\n      console.log('concatenated: ', reminders)\n\n      this.props.setReminder(reminders)\n\n      /* clear input field */\n      this.state.newReminder = ''\n    } else {\n      alert('A duplicate reminder exists already!')\n    }\n  }\n\n  handleReminderChange = (event) => {\n    this.setState({ newReminder: event.target.value })\n  }\n\n  handleTimeChange = (event) => {\n    this.setState({ newTime: event.target.value })\n  }\n  \n  render () {\n\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Aihe: <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n              Aika: <input\n                value={this.state.newTime}\n                onChange={this.handleTimeChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Add</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddReminders\n\n/*      date: ,*/\n"]},"metadata":{},"sourceType":"module"}