{"ast":null,"code":"import _classCallCheck from\"/home/utu/git/utuweb/ex_2_10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/utu/git/utuweb/ex_2_10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/utu/git/utuweb/ex_2_10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/utu/git/utuweb/ex_2_10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddReminders=/*#__PURE__*/function(_React$Component){_inherits(AddReminders,_React$Component);var _super=_createSuper(AddReminders);function AddReminders(props){var _this;_classCallCheck(this,AddReminders);/* voiko constructorin jättää pois, kokeile */_this=_super.call(this,props);_this.addReminder=function(event){/* prevent normal submit rendering and get from network */event.preventDefault();/* prevent duplicates */var pos=_this.props.reminders.findIndex(function(o){return o.name===_this.state.newReminder;});if(pos==-1){/* construct new object */var maxid=0;_this.props.reminders.map(function(o){if(o.id>maxid)maxid=o.id;});maxid=maxid+1;var reminderObject={name:_this.state.newReminder,timestamp:_this.state.newTime,id:maxid};/* concatenate new list and set to App state */var reminders=_this.props.reminders.concat(reminderObject);_this.props.setReminder(reminders);/* write to json file */axios.post('https://thawing-bayou-48463.herokuapp.com/api/reminders',reminderObject).then(function(response){console.log('post promise fulfilled for id: ',maxid);});/* clear input field */_this.state.newReminder='';}else{alert('A duplicate reminder exists already!');}};_this.handleReminderChange=function(event){_this.setState({newReminder:event.target.value});};_this.handleTimeChange=function(event){_this.setState({newTime:event.target.value});};_this.state={newReminder:'',newTime:new Date().toLocaleString()};return _this;}_createClass(AddReminders,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.addReminder,children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Aihe: \",/*#__PURE__*/_jsx(\"input\",{value:this.state.newReminder,onChange:this.handleReminderChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Aika: \",/*#__PURE__*/_jsx(\"input\",{value:this.state.newTime,onChange:this.handleTimeChange})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Lis\\xE4\\xE4\"})})]})});}}]);return AddReminders;}(React.Component);export default AddReminders;/*      date: ,*/","map":{"version":3,"sources":["/home/utu/git/utuweb/ex_2_10/src/addReminders.js"],"names":["React","axios","AddReminders","props","addReminder","event","preventDefault","pos","reminders","findIndex","o","name","state","newReminder","maxid","map","id","reminderObject","timestamp","newTime","concat","setReminder","post","then","response","console","log","alert","handleReminderChange","setState","target","value","handleTimeChange","Date","toLocaleString","Component"],"mappings":"4jBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2FAEMC,CAAAA,Y,wHACF,sBAAYC,KAAZ,CAAmB,8CAAG,8CACpB,uBAAMA,KAAN,EADiB,MAQrBC,WARqB,CAQP,SAACC,KAAD,CAAW,CAEvB,0DACAA,KAAK,CAACC,cAAN,GAEA,wBACA,GAAIC,CAAAA,GAAG,CAAG,MAAKJ,KAAL,CAAWK,SAAX,CAAqBC,SAArB,CAA+B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,GAAW,MAAKC,KAAL,CAAWC,WAA1B,EAAhC,CAAV,CACA,GAAIN,GAAG,EAAI,CAAC,CAAZ,CAAe,CAEb,0BACA,GAAIO,CAAAA,KAAK,CAAG,CAAZ,CACA,MAAKX,KAAL,CAAWK,SAAX,CAAqBO,GAArB,CAAyB,SAAAL,CAAC,CAAI,CAAC,GAAIA,CAAC,CAACM,EAAF,CAAOF,KAAX,CAAkBA,KAAK,CAAGJ,CAAC,CAACM,EAAV,CAAa,CAA9D,EACAF,KAAK,CAAGA,KAAK,CAAG,CAAhB,CACA,GAAMG,CAAAA,cAAc,CAAG,CACrBN,IAAI,CAAE,MAAKC,KAAL,CAAWC,WADI,CAErBK,SAAS,CAAE,MAAKN,KAAL,CAAWO,OAFD,CAGrBH,EAAE,CAAEF,KAHiB,CAAvB,CAMA,+CACA,GAAMN,CAAAA,SAAS,CAAG,MAAKL,KAAL,CAAWK,SAAX,CAAqBY,MAArB,CAA4BH,cAA5B,CAAlB,CACA,MAAKd,KAAL,CAAWkB,WAAX,CAAuBb,SAAvB,EAEA,wBACAP,KAAK,CACFqB,IADH,CACQ,yDADR,CACmEL,cADnE,EAEGM,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAA+CZ,KAA/C,EACD,CAJH,EAME,uBACF,MAAKF,KAAL,CAAWC,WAAX,CAAyB,EAAzB,CAED,CA1BD,IA0BO,CACLc,KAAK,CAAC,sCAAD,CAAL,CACD,CACF,CA5CoB,OA8CrBC,oBA9CqB,CA8CE,SAACvB,KAAD,CAAW,CAChC,MAAKwB,QAAL,CAAc,CAAEhB,WAAW,CAAER,KAAK,CAACyB,MAAN,CAAaC,KAA5B,CAAd,EACD,CAhDoB,OAkDrBC,gBAlDqB,CAkDF,SAAC3B,KAAD,CAAW,CAC5B,MAAKwB,QAAL,CAAc,CAAEV,OAAO,CAAEd,KAAK,CAACyB,MAAN,CAAaC,KAAxB,CAAd,EACD,CApDoB,CAEjB,MAAKnB,KAAL,CAAa,CACXC,WAAW,CAAE,EADF,CAEXM,OAAO,CAAE,GAAIc,CAAAA,IAAJ,GAAWC,cAAX,EAFE,CAAb,CAFiB,aAMlB,C,+CAgDH,iBAAU,CAER,mBACE,kCACE,cAAM,QAAQ,CAAE,KAAK9B,WAArB,wBACI,6CACQ,cACJ,KAAK,CAAE,KAAKQ,KAAL,CAAWC,WADd,CAEJ,QAAQ,CAAE,KAAKe,oBAFX,EADR,GADJ,cAOI,6CACQ,cACJ,KAAK,CAAE,KAAKhB,KAAL,CAAWO,OADd,CAEJ,QAAQ,CAAE,KAAKa,gBAFX,EADR,GAPJ,cAaI,kCACE,eAAQ,IAAI,CAAC,QAAb,yBADF,EAbJ,GADF,EADF,CAqBD,C,0BA9EwBhC,KAAK,CAACmC,S,EAiFjC,cAAejC,CAAAA,YAAf,CAEA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass AddReminders extends React.Component {\n    constructor(props) {  /* voiko constructorin jättää pois, kokeile */\n      super(props);\n      this.state = {\n        newReminder: '',\n        newTime: new Date().toLocaleString()\n      }\n    }\n\n  addReminder = (event) => {\n  \n    /* prevent normal submit rendering and get from network */\n    event.preventDefault()\n\n    /* prevent duplicates */\n    var pos = this.props.reminders.findIndex(o => o.name === this.state.newReminder)\n    if (pos == -1) {\n\n      /* construct new object */\n      var maxid = 0\n      this.props.reminders.map(o => {if (o.id > maxid) maxid = o.id})\n      maxid = maxid + 1\n      const reminderObject = {\n        name: this.state.newReminder,\n        timestamp: this.state.newTime,\n        id: maxid\n      }\n    \n      /* concatenate new list and set to App state */\n      const reminders = this.props.reminders.concat(reminderObject)\n      this.props.setReminder(reminders)\n\n      /* write to json file */\n      axios\n        .post('https://thawing-bayou-48463.herokuapp.com/api/reminders', reminderObject)\n        .then(response => {\n          console.log('post promise fulfilled for id: ', maxid)\n        })\n\n        /* clear input field */\n      this.state.newReminder = ''\n\n    } else {\n      alert('A duplicate reminder exists already!')\n    }\n  }\n\n  handleReminderChange = (event) => {\n    this.setState({ newReminder: event.target.value })\n  }\n\n  handleTimeChange = (event) => {\n    this.setState({ newTime: event.target.value })\n  }\n  \n  render () {\n\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Aihe: <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n            </div>\n            <div>\n              Aika: <input\n                value={this.state.newTime}\n                onChange={this.handleTimeChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Lisää</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddReminders\n\n/*      date: ,*/\n"]},"metadata":{},"sourceType":"module"}