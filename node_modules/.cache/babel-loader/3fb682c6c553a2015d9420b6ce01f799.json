{"ast":null,"code":"var _jsxFileName = \"/home/utu/git/utuweb/ex_2_10/src/addReminders.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleReminderChange(event) {\n  console.log(event.target.value);\n  this.setState({\n    newReminder: event.target.value\n  });\n}\n\nfunction addReminder(event) {\n  /*alert('A note was submitted: ' + this.state.newNote);*/\n  event.preventDefault();\n  const reminderObject = {\n    name: this.state.newReminder,\n\n    /*      date: new Date().toISOString(),*/\n    id: this.state.reminders.length + 1\n  };\n  console.log(reminderObject);\n  const reminders = this.state.reminders.concat(reminderObject);\n  console.log(reminders);\n  this.setState({\n    reminders: reminders,\n    newReminder: ''\n  });\n  this.props.register(this.state.reminders);\n  console.log('nappia painettu');\n  console.log(event.target);\n}\n\nfunction AddReminders(reminders, newReminder) {\n  /* voisiko tästä tehdä vain funktion? */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.addReminder,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Topic:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.newReminder,\n          onChange: this.handleReminderChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ShowReminders, {\n      reminders: this.state.reminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_c = AddReminders;\nexport default AddReminders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminders\");","map":{"version":3,"sources":["/home/utu/git/utuweb/ex_2_10/src/addReminders.js"],"names":["React","handleReminderChange","event","console","log","target","value","setState","newReminder","addReminder","preventDefault","reminderObject","name","state","id","reminders","length","concat","props","register","AddReminders"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,oBAAT,CAA+BC,KAA/B,EAAsC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,OAAKC,QAAL,CAAc;AAAEC,IAAAA,WAAW,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAA5B,GAAd;AACD;;AAED,SAASG,WAAT,CAAsBP,KAAtB,EAA6B;AAC3B;AACAA,EAAAA,KAAK,CAACQ,cAAN;AACA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWL,WADI;;AAEzB;AACIM,IAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWE,SAAX,CAAqBC,MAArB,GAA8B;AAHb,GAAvB;AAKAb,EAAAA,OAAO,CAACC,GAAR,CAAYO,cAAZ;AACA,QAAMI,SAAS,GAAG,KAAKF,KAAL,CAAWE,SAAX,CAAqBE,MAArB,CAA4BN,cAA5B,CAAlB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYW,SAAZ;AACA,OAAKR,QAAL,CAAc;AACZQ,IAAAA,SAAS,EAAEA,SADC;AAEZP,IAAAA,WAAW,EAAE;AAFD,GAAd;AAIA,OAAKU,KAAL,CAAWC,QAAX,CAAoB,KAAKN,KAAL,CAAWE,SAA/B;AAEAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACD;;AAED,SAASe,YAAT,CAAuBL,SAAvB,EAAkCP,WAAlC,EAA+C;AAE3C;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,WAArB;AAAA,8BACI;AAAA,0CAEE;AACE,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWL,WADpB;AAEE,UAAA,QAAQ,EAAE,KAAKP;AAFjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKY,KAAL,CAAWE;AAArC;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH;;KApBQK,Y;AAsBT,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nfunction handleReminderChange (event) {\n  console.log(event.target.value)\n  this.setState({ newReminder: event.target.value })\n}\n\nfunction addReminder (event) {\n  /*alert('A note was submitted: ' + this.state.newNote);*/\n  event.preventDefault()\n  const reminderObject = {\n    name: this.state.newReminder,\n/*      date: new Date().toISOString(),*/\n    id: this.state.reminders.length + 1\n  }\n  console.log(reminderObject)\n  const reminders = this.state.reminders.concat(reminderObject)\n  console.log(reminders)\n  this.setState({\n    reminders: reminders,\n    newReminder: ''\n  })\n  this.props.register(this.state.reminders)\n\n  console.log('nappia painettu')\n  console.log(event.target)\n}\n\nfunction AddReminders (reminders, newReminder) {\n \n    /* voisiko tästä tehdä vain funktion? */\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Topic: \n              <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Add</button>\n            </div>\n        </form>\n        <ShowReminders reminders={this.state.reminders} />\n      </div>\n    )\n}\n\nexport default AddReminders"]},"metadata":{},"sourceType":"module"}